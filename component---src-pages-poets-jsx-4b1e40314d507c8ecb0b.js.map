{"version":3,"sources":["webpack:///./src/components/ListOfAuthors/ListOfAuthors.jsx","webpack:///./src/components/ListOfAuthors/index.js","webpack:///./src/pages/poets.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/i18n.js","webpack:///./src/components/languagesSwitch/index.js","webpack:///./src/components/languagesSwitch/languagesSwitch.jsx","webpack:///./src/components/header/index.js","webpack:///./src/components/header/header.jsx","webpack:///./src/components/menu/index.js","webpack:///./src/components/menu/menu.jsx","webpack:///./src/components/layout.jsx","webpack:///./src/components/seo.js"],"names":["ListOfAuthors","props","_this","_Component","call","this","state","searchValue","handleSearchChange","bind","_assertThisInitialized","event","value","target","setState","render","authors","t","react_default","a","createElement","Fragment","Form_default","Control","className","onChange","size","placeholder","filter","author","_author$node$frontmat","node","frontmatter","name","birthPlace","toLowerCase","includes","map","id","_author$node$frontmat2","path","key","gatsby_browser_entry","to","Component","withTranslation","__webpack_require__","d","__webpack_exports__","pageQuery","PoetsPage","_ref","edges","data","allJavascriptFrontmatter","layout","seo","title","components_ListOfAuthors","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","i18n","use","detector","initReactI18next","init","resources","en","translation","ru","by","fallbackLng","keySeparator","interpolation","escapeValue","LanguagesSwitch","as","defaultValue","language","e","changeLanguage","Header","style","background","padding","Container_default","Row_default","Col_default","md","span","offset","margin","fontSize","color","textDecoration","lg","xs","components_languagesSwitch","Menu","Layout","children","components_header","components_menu","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","property","concat","defaultProps"],"mappings":"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","file":"component---src-pages-poets-jsx-4b1e40314d507c8ecb0b.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nimport { withTranslation } from 'react-i18next';\n\nimport Form from 'react-bootstrap/Form';\n\nclass ListOfAuthors extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchValue: '',\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n  }\n\n  handleSearchChange(event) {\n    const { value } = event.target;\n    this.setState({ searchValue: value });\n  }\n\n  render() {\n    const { searchValue } = this.state;\n    const { authors } = this.props;\n    const { t } = this.props;\n    const { handleSearchChange } = this;\n    return (\n      <>\n        <Form.Control\n          className=\"mb-3\"\n          value={searchValue}\n          onChange={handleSearchChange}\n          size=\"lg\"\n          placeholder={t('Search by name, place of birth')}\n        />\n        <ul>\n          {authors.filter((author) => {\n            const { name, birthPlace } = author.node.frontmatter;\n            return (name + birthPlace).toLowerCase().includes(searchValue.toLowerCase());\n          })\n            .map((author) => {\n              const { id } = author.node;\n              const { path, name } = author.node.frontmatter;\n              return (\n                <li key={id}>\n                  <Link to={`${path}`}>{name}</Link>\n                </li>\n              );\n            })\n          }\n        </ul>\n      </>\n    );\n  }\n}\n\n\nListOfAuthors.propTypes = {\n  authors: PropTypes.arrayOf(\n    PropTypes.shape({\n      node: PropTypes.shape({\n        id: PropTypes.string,\n        frontmatter: PropTypes.shape({\n          path: PropTypes.string,\n          lng: PropTypes.string,\n          name: PropTypes.string,\n          birthPlace: PropTypes.string,\n        }),\n      }),\n    }),\n  ).isRequired,\n};\n\nListOfAuthors.propTypes = {\n  t: PropTypes.func.isRequired,\n};\nexport default withTranslation()(ListOfAuthors);\n","import ListOfAuthors from './ListOfAuthors';\n\nexport default ListOfAuthors;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import { withTranslation } from 'react-i18next';\n\nimport { graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nimport ListOfAuthors from '../components/ListOfAuthors';\n\nconst PoetsPage = ({ data }) => {\n  const { edges } = data.allJavascriptFrontmatter;\n  return (\n    <Layout>\n      <SEO title=\"Poets\" />\n      <h2 className=\"mb-4\">Poets</h2>\n      <ListOfAuthors authors={edges} />\n    </Layout>\n  );\n};\n\nPoetsPage.propTypes = {\n  data: PropTypes.shape({\n    allJavascriptFrontmatter: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.shape({\n        node: PropTypes.shape({\n          id: PropTypes.string,\n          frontmatter: PropTypes.shape({\n            path: PropTypes.string,\n            lng: PropTypes.string,\n            name: PropTypes.string,\n            birthPlace: PropTypes.string,\n          }),\n        }),\n      })),\n    }),\n  }).isRequired,\n};\n\nexport const pageQuery = graphql`\n  query {\n    allJavascriptFrontmatter {\n      edges {\n        node {\n          id\n          frontmatter {\n            lng\n            path\n            birthPlace\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default PoetsPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import i18n from 'i18next';\nimport detector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\n\n// the translations\n// (tip move them in a JSON file and import them)\n\nimport en from '../locale/en.json';\nimport ru from '../locale/ru.json';\nimport by from '../locale/by.json';\n\ni18n\n  .use(detector)\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources: {\n      en: {\n        translation: en,\n      },\n      ru: {\n        translation: ru,\n      },\n      by: {\n        translation: by,\n      },\n    },\n\n    fallbackLng: 'en',\n\n    keySeparator: false, // we do not use keys in form messages.welcome\n\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  });\n\nexport default i18n;\n","import LanguagesSwitch from './languagesSwitch';\n\nexport default LanguagesSwitch;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { withTranslation } from 'react-i18next';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Form from 'react-bootstrap/Form';\n\nconst LanguagesSwitch = ({ i18n }) => (\n  <Form.Control\n    as=\"select\"\n    size=\"sm\"\n    defaultValue={i18n.language}\n    onChange={(e) => { i18n.changeLanguage(e.target.value); }}\n  >\n    <option>en</option>\n    <option>ru</option>\n    <option>by</option>\n  </Form.Control>\n);\n\nLanguagesSwitch.propTypes = {\n  i18n: PropTypes.shape({\n    language: PropTypes.string,\n    changeLanguage: PropTypes.func,\n  }).isRequired,\n};\nexport default withTranslation()(LanguagesSwitch);\n","import Header from './header';\n\nexport default Header;\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport { withTranslation } from 'react-i18next';\nimport LanguagesSwitch from '../languagesSwitch';\n\n\nconst Header = ({ t }) => (\n  <header\n    style={{\n      background: 'tomato',\n      padding: '0.3rem',\n    }}\n  >\n    <Container>\n      <Row>\n        <Col md={{ span: 4, offset: 2 }}>\n          <h1 style={{ margin: 0, fontSize: '2rem' }}>\n            <Link\n              to=\"/\"\n              style={{\n                color: 'white',\n                textDecoration: 'none',\n              }}\n            >\n              {t('Poets of Belarus')}\n            </Link>\n          </h1>\n          <h2 style={{ fontSize: '1.2rem' }}>{t('Information Portal')}</h2>\n        </Col>\n        <Col md={{ span: 2, offset: 3 }} lg={{ span: 1, offset: 3 }} xs={{ span: 4 }}>\n          <LanguagesSwitch />\n        </Col>\n      </Row>\n    </Container>\n  </header>\n);\n\nHeader.propTypes = {\n  t: PropTypes.func.isRequired,\n};\n\nexport default withTranslation()(Header);\n","import Menu from './menu';\n\nexport default Menu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { withTranslation } from 'react-i18next';\n\nimport './menu.css';\n\nimport { Link } from 'gatsby';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\n\nconst Menu = ({ t }) => (\n  <div className=\"nav-line\">\n    <Container>\n      <Row>\n        <Col md={{ span: 8, offset: 2 }}>\n          <nav className=\"navbar\">\n            <ul className=\"nav navbar-ul\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/\">{t('Home')}</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/poets\">{t('Poets')}</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/\">{t('Contact us')}</Link>\n              </li>\n            </ul>\n          </nav>\n        </Col>\n      </Row>\n    </Container>\n  </div>\n);\n\nMenu.propTypes = {\n  t: PropTypes.func.isRequired,\n};\n\nexport default withTranslation()(Menu);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './i18n';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport Header from './header';\nimport Menu from './menu';\n\nconst Layout = ({ children }) => (\n  <>\n    <Header />\n    <Menu />\n    <main>\n      <Container>\n        <Row>\n          <Col lg={{ span: 8, offset: 2 }}>\n            {children}\n          </Col>\n        </Row>\n      </Container>\n    </main>\n  </>\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}